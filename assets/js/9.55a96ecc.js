(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{313:function(t,s,a){"use strict";function e(t,s,a,e,n,r,o,p){var c,_="function"==typeof t?t.options:t;if(s&&(_.render=s,_.staticRenderFns=a,_._compiled=!0),e&&(_.functional=!0),r&&(_._scopeId="data-v-"+r),o?(c=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),n&&n.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},_._ssrRegister=c):n&&(c=p?function(){n.call(this,(_.functional?this.parent:this).$root.$options.shadowRoot)}:n),c)if(_.functional){_._injectStyles=c;var v=_.render;_.render=function(t,s){return c.call(s),v(t,s)}}else{var l=_.beforeCreate;_.beforeCreate=l?[].concat(l,c):[c]}return{exports:t,options:_}}a.d(s,"a",(function(){return e}))},375:function(t,s,a){"use strict";a.r(s);var e=a(313),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("本文主要涉及内容：CentOS下Nginx和ASP NET Core 环境的搭建、 多网站多域名的配置部署、SSL证书配置、强制HTTPS访问配置、ASP NET Core反向代理等。")]),t._v(" "),a("h2",{attrs:{id:"_1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),a("p",[t._v("本文服务器环境：阿里云ECS   CentOS Linux release 7.6.1810 (Core)")]),t._v(" "),a("p",[t._v("服务器上准备搭建两个网站：")]),t._v(" "),a("p",[t._v("1. 网站服务：www.flylolo.cn     用于页面访问")]),t._v(" "),a("p",[t._v("2. 网站服务：api.flylolo.cn        用于api服务")]),t._v(" "),a("p",[t._v("要求两个网站全部强制https的方式访问。在/home下新建了一个www的目录，接着又分别创建了/home/www/web 和 /home/www/api 两个目录用于存放上述两个网站。")]),t._v(" "),a("h2",{attrs:{id:"_2-配置asp-net-core环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置asp-net-core环境"}},[t._v("#")]),t._v(" 2. 配置ASP NET Core环境")]),t._v(" "),a("p",[t._v("通过Putty链接到CentOS服务器，按照该页面上的步骤执行如下命令：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("sudo rpm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Uvh")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("packages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("microsoft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rhel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("packages"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("microsoft"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("prod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rpm\n")])])]),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("sudo yum update\n    sudo yum install aspnetcore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("runtime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.2")]),t._v("\n")])])]),a("p",[t._v("由于只是在此服务器上运行，只安装运行环境就可以了， 没必要安装SDK。   它包含了.NET Core runtime 和the ASP.NET Core runtime。")]),t._v(" "),a("h2",{attrs:{id:"_3-部署asp-net-core网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-部署asp-net-core网站"}},[t._v("#")]),t._v(" 3. 部署ASP NET Core网站")]),t._v(" "),a("h2",{attrs:{id:"_1-网站发布与部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-网站发布与部署"}},[t._v("#")]),t._v(" 1. 网站发布与部署")]),t._v(" "),a("p",[t._v("VS新建一个网站，修改Program文件，")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("IWebHostBuilder")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateWebHostBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n                WebHost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateDefaultBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UseUrls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://*:8081"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UseStartup")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Startup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这里添加了一句话 "),a("code",[t._v('UseUrls(<span style="color: #800000;">"')]),a("span",{staticStyle:{color:"#800000"}},[t._v("http://*:8081")]),a("span",{staticStyle:{color:"#800000"}},[t._v('"')]),t._v(")"),t._v("  ，将访问端口指定为8081。  发布网站，并将文件上传到服务器的 /home/www/api 目录下。")]),t._v(" "),a("p",[t._v("测试一下：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("cd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api\n    dotnet apidemo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dll\n")])])]),a("p",[t._v("会看到 "),a("code",[t._v('Now listening on: http:<span style="color: #008000;">//')]),a("span",{staticStyle:{color:"#008000"}},[t._v("[::]:8081")]),t._v(" 的提示，网站成功运行。")]),t._v(" "),a("p",[t._v("此时浏览器访问http://服务器ip:8081是无法访问的， 若想测试可以在实例的安全组中配置开放8081端口，建议测试后关闭，因为我们会通过Nginx访问此服务而不是将此端口开放外部访问。")]),t._v(" "),a("h2",{attrs:{id:"_2-配置自动启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-配置自动启动"}},[t._v("#")]),t._v(" 2. 配置自动启动")]),t._v(" "),a("p",[t._v("我们不可能每次都通过命令启动服务，而且需要开机自动启动，如下配置一下")]),t._v(" "),a("p",[t._v("再次用nano创建文件：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("sudo nano "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("systemd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("system"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kestrel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n")])])]),a("p",[t._v("文件内容如下：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cnblogs_code_toolbar"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("复制代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("blogimages"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10488828")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("copycode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"复制代码"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("[Unit]\nDescription=Example .NET Web API App running on CentOS 7")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("[Service]\nWorkingDirectory=/home/www/api\nExecStart=/usr/bin/dotnet /home/www/api/apidemo.dll\nRestart=always\n# Restart service after 10 seconds if dotnet service crashes\nRestartSec=10\nSyslogIdentifier=dotnet-example\nUser=root\nEnvironment=ASPNETCORE_ENVIRONMENT=Production \n\n[Install]\nWantedBy=multi-user.target\n")])])]),a("div",{staticClass:"cnblogs_code_toolbar"},[a("span",{staticClass:"cnblogs_code_copy"},[t._v('[![复制代码](/blogimages/10488828/copycode.gif)]( "复制代码")')])]),t._v(" "),a("p",[t._v("保存并启动服务：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("systemctl enable kestrel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n    systemctl start kestrel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n")])])]),a("p",[t._v("查看是否成功：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("systemctl status kestrel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service\n")])])]),a("p",[a("span",{staticStyle:{color:"#000000"}},[t._v(" ****会看到绿色的字体提示 "),a("code",[t._v("Active: active (running)")]),t._v(" ，"),a("strong",[t._v("若遇到问题，可执行 "),a("code",[t._v("journalctl -xe")]),t._v(" 查看错误信息。")])])]),t._v(" "),a("p",[t._v("至此，我们的dotnet的配置就完成了，下一步用Nginx反向代理访问它。")]),t._v(" "),a("h2",{attrs:{id:"_4-安装nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-安装nginx"}},[t._v("#")]),t._v(" 4. 安装Nginx")]),t._v(" "),a("p",[a("strong",[t._v("安装Nginx的依赖的三个包：")])]),t._v(" "),a("p",[t._v("1 #yum install openssl")]),t._v(" "),a("p",[t._v("2  #yum install zlib")]),t._v(" "),a("p",[t._v("3 #yum install pcre")]),t._v(" "),a("p",[a("strong",[t._v("安装nginx")])]),t._v(" "),a("p",[t._v("1. 安装nginx：#yum install nginx")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("启动：systemctl start nginx.service   此时浏览器访问当前IP可以看到写有**Welcome to nginx on Fedora!**的测试页了，这个页面最后一句话： "),a("code",[t._v("nginx configuration file /etc/nginx/nginx.conf.")]),t._v(" 提示了配置文件路径。")])]),t._v(" "),a("p",[t._v("3. 设为开机自动启动：systemctl enablenginx.service")]),t._v(" "),a("h2",{attrs:{id:"_3-ssl免费证书申请"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-ssl免费证书申请"}},[t._v("#")]),t._v(" 3. SSL免费证书申请")]),t._v(" "),a("ol",[a("li",[t._v("产品与服务=> 安全（云盾）=> SSL证书。购买证书，选择Symantec的免费型DV SSL。购买后在证书列表中会有一个未签发的证书。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/10488828/548134-20190307131412831-476052257.png",alt:""}})]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("申请证书：点击申请按钮，会要求填写域名相关信息")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/10488828/548134-20190307142201997-759806738.png",alt:""}})]),t._v(" "),a("p",[t._v("注意免费的SSL不能写通配符，例如“*”，即使是二级域名也要单独申请。例如 www.flylolo.cn和 api.flylolo.cn是要申请两个证书的。")]),t._v(" "),a("p",[t._v("特例：若域名只写了flylolo.cn，则可用于flylolo.cn和www.flylolo.cn的访问，而不能用于api.flylolo.cn。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("验证：填写完提交后，会进行域名验证，如果上一步的验证方式选择的是自动DNS验证，则会自动在域名解析处添加一条验证信息，若选择了手工，则需要自己按照提示添加该信息。这条信息仅用于本次验证，验证签发之后，此条自己手动删除即可。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/10488828/548134-20190307142946162-1709389470.png",alt:""}})]),t._v(" "),a("p",[t._v("4.提交审核， 验证成功后，点击下面的按钮提交审核，然后等待审核通过。我做这步的时候，最快一分钟左右，刷新一下页面，就发现该证书已经到了【已签发】阶段，这时候就可以下载使用了。")]),t._v(" "),a("h2",{attrs:{id:"_4-多网站及证书配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-多网站及证书配置"}},[t._v("#")]),t._v(" 4. 多网站及证书配置")]),t._v(" "),a("p",[t._v("第二步安装nginx的时候，我们知道了nginx的配置文件在 "),a("code",[t._v("/etc/nginx/nginx.conf")]),t._v(" ，打开它，也是类似json格式的配置方式，下面是默认配置：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" default_server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            listen       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" default_server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("server_name")]),t._v("  _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            root         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("share"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token preprocessor property"}},[t._v("# Load configuration files for the default server block.")]),t._v("\n            include "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*.conf;\n\n            location / {\n            }\n\n            error_page 404 /404.html;\n                location = /40x.html {\n            }\n\n            error_page 500 502 503 504 /50x.html;\n                location = /50x.html {\n            }\n        }\n")])])])]),a("p",[t._v("先不管它，看到下面有用“#”注释掉的  "),a("code",[t._v('listen <span style="color: #800080;">443')]),t._v(" ssl "),t._v(" 的一个server { }， 这就是SSL的配置例子了。")]),t._v(" "),a("p",[t._v("先去下载刚申请的SSL证书，选择Nginx的。下载解压后包含一个key文件和一个pem文件。")]),t._v(" "),a("p",[t._v("新建一个名为api.conf的文本文件，")])])}),[],!1,null,null,null);s.default=n.exports}}]);