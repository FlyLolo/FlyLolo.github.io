(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{313:function(t,s,a){"use strict";function r(t,s,a,r,e,o,p,n){var _,v="function"==typeof t?t.options:t;if(s&&(v.render=s,v.staticRenderFns=a,v._compiled=!0),r&&(v.functional=!0),o&&(v._scopeId="data-v-"+o),p?(_=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),e&&e.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(p)},v._ssrRegister=_):e&&(_=n?function(){e.call(this,(v.functional?this.parent:this).$root.$options.shadowRoot)}:e),_)if(v.functional){v._injectStyles=_;var l=v.render;v.render=function(t,s){return _.call(s),l(t,s)}}else{var c=v.beforeCreate;v.beforeCreate=c?[].concat(c,_):[_]}return{exports:t,options:v}}a.d(s,"a",(function(){return r}))},389:function(t,s,a){"use strict";a.r(s);var r=a(313),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("当使用工具条中的显示/隐藏列的时候， 经常出现表格的列头与内容无法对齐的问题。")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#800080","font-size":"16px"}},[a("strong",[t._v("网上搜到两种处理方法，如下：")])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("去掉option中的height，完美对齐，但当数据较多的时候，table会自动增加height，显示所有数据而不显示滚动条。")])]),t._v(" "),a("li",[a("p",[t._v("注释掉如下两行")])])]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//this.resetHeader();")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//padding += this.$header.outerHeight();")]),t._v("\n")])])]),a("p",[t._v("完美对齐，但会导致无法冻结表头。")]),t._v(" "),a("p",[t._v("这两种结果都是鱼与熊掌不可兼得， 被影响的功能也是非常想要的，让小罗我很郁闷。")]),t._v(" "),a("p",[t._v("最后怀疑问题的原因应该是列的减少过程中，剩余列设置了宽度，但减少列后要填充剩余宽度时的计算问题。")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#800080","font-size":"16px"}},[t._v("** 最后自己采用了如下方式，供大家参考：  **")])]),t._v(" "),a("p",[t._v("不设置其中一列的宽度，使其自动填充，如下代码")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("thead"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("th data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Code"')]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"105px"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("编号"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("th"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("th data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Name"')]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("switchable"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("姓名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("th"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("th data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sex"')]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"120px"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("性别"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("th"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("th data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Age"')]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"120px"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("年龄"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("th"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("th data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LoloOperate"')]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("width"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30px"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("操作"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("th"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("thead"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("这样只要不去掉名称，去掉其他列的时候不会出现对不齐的问题，为了防止此列被去掉，加上"),a("span",{staticStyle:{color:"#ff0000"}},[t._v("data-switchable")]),t._v('="false"')]),t._v(" "),a("p",[t._v("正常业务中也经常会有这样要求自动填充宽度的列，算是比较好的一种解决方式。")])])}),[],!1,null,null,null);s.default=e.exports}}]);