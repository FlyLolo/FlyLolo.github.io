(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{313:function(t,s,a){"use strict";function e(t,s,a,e,r,n,o,p){var c,v="function"==typeof t?t.options:t;if(s&&(v.render=s,v.staticRenderFns=a,v._compiled=!0),e&&(v.functional=!0),n&&(v._scopeId="data-v-"+n),o?(c=function(t){(t=t||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(t=__VUE_SSR_CONTEXT__),r&&r.call(this,t),t&&t._registeredComponents&&t._registeredComponents.add(o)},v._ssrRegister=c):r&&(c=p?function(){r.call(this,(v.functional?this.parent:this).$root.$options.shadowRoot)}:r),c)if(v.functional){v._injectStyles=c;var _=v.render;v.render=function(t,s){return c.call(s),_(t,s)}}else{var l=v.beforeCreate;v.beforeCreate=l?[].concat(l,c):[c]}return{exports:t,options:v}}a.d(s,"a",(function(){return e}))},439:function(t,s,a){"use strict";a.r(s);var e=a(313),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"九-发布到centos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九-发布到centos"}},[t._v("#")]),t._v(" 九.发布到CentOS")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("本文聊一下如何在Windows上用VS开发并发布， 然后将其部署到CentOS上。对于我们一些常在Windows上逛的来说，CentOS用起来还真有些麻烦。MSDN官方有篇文章大概讲了一下（"),a("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/aspnet/core/host-and-deploy/linux-apache?tabs=aspnetcore2x",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1),t._v("），按照MSDN上面的例子用vs创建个hellomvc项目，还是踩了好多坑，将整个过程和遇到的坑说一下，希望对有需要的朋友有所帮助。（"),a("a",{attrs:{href:"http://www.cnblogs.com/FlyLolo/p/ASPNETCore2_0.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ASP.NET Core系列目录"),a("OutboundLink")],1),t._v("）")]),t._v(" "),a("p",[t._v("本文主要内容：")]),t._v(" "),a("p",[t._v("1.工具准备")]),t._v(" "),a("p",[t._v("2.CentOS 上安装.NET Core环境")]),t._v(" "),a("p",[t._v("3.Windows上用VS发布项目")]),t._v(" "),a("p",[t._v("4.项目运行测试")]),t._v(" "),a("p",[t._v("5.安装并配置Apache")]),t._v(" "),a("p",[t._v("6.创建service管理应用")]),t._v(" "),a("p",[t._v("7.其他注意事项")]),t._v(" "),a("p",[t._v("8.独立部署（SCD）")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff6600"}},[t._v("  9.2018.5.8文章更新：Visual Studio 2017 15.7版本的项目发布提供了部署模式（框架依赖和独立部署）和目标运行时（win、osx、linux）的选择功能")])]),t._v(" "),a("p",[t._v("示意图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/ASPNETCore2_9/548134-20180502111537901-311287491.png",alt:""}})]),t._v(" "),a("p",[t._v("最近在阿里云上弄了个ECS玩，既然.NET Core跨平台了，也就选了个CentOS的系统，然后踩坑开始。")]),t._v(" "),a("h2",{attrs:{id:"_1-工具准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-工具准备"}},[t._v("#")]),t._v(" 1. 工具准备")]),t._v(" "),a("p",[t._v("Putty：阿里云提供了一个网页方式远程操作CentOS的命令行工具，没找到怎么粘贴，挺不好用的。这个是一个命令行的小软件，也省去了每次都要登录阿里云控制台的步骤。"),a("a",{attrs:{href:"https://the.earth.li/~sgtatham/putty/latest/w64/putty.exe",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("FileZila：sftp工具，用于将windows上生成的发布包弄到CentOS上去。"),a("a",{attrs:{href:"https://download.filezilla-project.org/client/FileZilla_3.32.0_win64-setup_bundled.exe",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"_2-centos-上安装-net-core环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-centos-上安装-net-core环境"}},[t._v("#")]),t._v(" 2. CentOS 上安装.NET Core环境")]),t._v(" "),a("p",[t._v("安装.NET Core的环境有两种方式，SDK和Runtime，区别类似java的JDK和JRE。")]),t._v(" "),a("p",[t._v("官方提供的"),a("a",{attrs:{href:"https://www.microsoft.com/net/download/linux/run",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载页面"),a("OutboundLink")],1),t._v("用Build Apps 和Run Apps描述这两个， 我们不需要在CentOS上编码， 所以安装Runtime就够了。")]),t._v(" "),a("p",[t._v("在页面的all downloads中找到CentOS对应的Runtime版本页面（"),a("a",{attrs:{href:"https://www.microsoft.com/net/download/linux-package-manager/centos/runtime-2.0.6",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1),t._v("）进行安装，这里要注意一下：")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff6600"}},[t._v("坑一：版本问题，看了一下自己的VS中项目的Microsoft.AspNetCore.All版本是2.0.6， 也就去找了Runtime的2.0.6版本， 否则容易出现某些组件在VS上的引用版本和CentOS上的环境中的版本不一致的错误。")])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#000000"}},[t._v(" 通过Putty链接到CentOS服务器，按照该页面上的步骤执行如下命令：")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rpm")]),t._v(" --import https://packages.microsoft.com/keys/microsoft.asc\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" -c "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'echo -e \"[packages-microsoft-com-prod]\\nname=packages-microsoft-com-prod \\nbaseurl= https://packages.microsoft.com/yumrepos/microsoft-rhel7.3-prod\\nenabled=1\\ngpgcheck=1\\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc\" > /etc/yum.repos.d/dotnetdev.repo'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum update\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" libunwind libicu\n")])])]),a("p",[a("span",{staticStyle:{color:"#ff6600"}},[t._v("最后还有下面关键一步我执行后部署仍会有提示某包找不到的问题，")])]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("sudo yum install dotnet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("runtime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".6")]),t._v("\n")])])]),a("p",[t._v("在github上看到这样一段话：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("Linux\nOn supported "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Linux")]),t._v(" systems"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" register the Microsoft Product feed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("described")]),t._v(" above "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" install dotnet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hosting"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".6")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" your package manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" This will also install the "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NET Core Runtime "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" other required packages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("p",[t._v("后来测试了一下不安装dotnet-runtime-"),a("span",{attrs:{"data-mce-":""}},[t._v("2.0."),a("span",{attrs:{"data-mce-":""}},[t._v("6")])]),t._v("而是安装dotnet-hosting-"),a("span",{attrs:{"data-mce-":""}},[t._v("2.0."),a("span",{attrs:{"data-mce-":""}},[t._v("6")])]),t._v("成功。")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("sudo yum install dotnet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("hosting"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".6")]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-windows上用vs发布项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-windows上用vs发布项目"}},[t._v("#")]),t._v(" 3. Windows上用VS发布项目")]),t._v(" "),a("p",[t._v("右键项目选择发布，默认情况下是FDD（依赖框架部署），发布生成的内容不包含依赖的框架内容，将依赖上文安装的runtime。")]),t._v(" "),a("p",[t._v("在CentOS上创建个文件夹， 通过FileZila将发布的文件上传到该文件夹。")]),t._v(" "),a("p",[t._v("参考创建目录命令： "),a("code",[t._v('mkdir -p /<span style="color: #0000ff;">var')]),t._v("/aspnetcore/hellomvc")]),t._v(" "),a("h2",{attrs:{id:"_4-项目运行测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-项目运行测试"}},[t._v("#")]),t._v(" 4. 项目运行测试")]),t._v(" "),a("p",[t._v("执行命令运行上传后的项目：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("dotnet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("aspnetcore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hellomvc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hellomvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dll\n")])])]),a("p",[t._v("我们都知道，默认情况下，项目采用的事5000端口，我运行项目时遇到了端口冲突，可能是被占用了吧，VS中修改一下Program.cs, 将端口改为常用的8080")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("IWebHost")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BuildWebHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n        WebHost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("CreateDefaultBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UseUrls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://*:8080"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token generic-method"}},[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UseStartup")]),a("span",{pre:!0,attrs:{class:"token generic class-name"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Startup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("重新发布并上传，执行上面的命令成功，提示"),a("span",{attrs:{"data-ttu-id":"24e91-142"}},[t._v("Kestrel")]),t._v("开始监听8080端口。")]),t._v(" "),a("p",[t._v("浏览器访问一下http://ip:8080")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/ASPNETCore2_9/548134-20180428171317951-1548356450.png",alt:""}})]),t._v(" "),a("p",[t._v("结果如上图很怪异，"),a("span",{staticStyle:{color:"#ff6600"}},[t._v("坑二出现，")]),t._v("按F12查看一下提示找不到xxx.css  xxx.js等，通过FileZila确认对应的css和js文件都已成功上传在指定位置。")]),t._v(" "),a("p",[t._v("第一感觉是没有执行UseStaticFiles()， 确认了一下已执行。接着又怀疑是目录大小写问题，一 一排除， 均正常。")]),t._v(" "),a("p",[t._v("后来先cd到发布目录，再次执行，终于成功。")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("cd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("aspnetcore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hellomvc\n")])])]),a("p",[t._v("结果如我们熟悉的下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/ASPNETCore2_9/548134-20180428171329166-2060405090.png",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_5-安装并配置apache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-安装并配置apache"}},[t._v("#")]),t._v(" 5. 安装并配置Apache")]),t._v(" "),a("p",[t._v("安装Apache，并配置反向代理， 将80端口请求转给上面的8080端口由"),a("span",{attrs:{"data-ttu-id":"24e91-142"}},[t._v("Kestrel")]),t._v("处理。")]),t._v(" "),a("p",[t._v("安装并启动Apache")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum -y "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" httpd mod_ssl\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start httpd\n")])])]),a("p",[t._v("访问一下http://ip ，页面是Apache的默认页面，安装成功。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/ASPNETCore2_9/548134-20180428171340250-910561158.png",alt:""}})]),t._v(" "),a("p",[t._v("配置代理，创建并打开文件hellomvc.conf：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("nano "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("etc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("httpd"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hellomvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\n")])])]),a("p",[t._v("nano是一个文本编辑工具，如果提示  nano: command not found   可能nano没有安装"),a("br"),t._v("\n执行   "),a("code",[t._v("yum install nano")]),t._v("  命令安装即可。")]),t._v(" "),a("p",[t._v("hellomvc.conf文件内写入如下内容：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("VirtualHost")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("*:")]),t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    ProxyPreserveHost On\n    ProxyPass / http://127.0.0.1:8080/\n    ProxyPassReverse / http://127.0.0.1:8080/\n    ServerName www.example.com\n    ServerAlias *.example.com\n    ErrorLog ${APACHE_LOG_DIR}hellomvc-error.log\n    CustomLog ${APACHE_LOG_DIR}hellomvc-access.log common\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("VirtualHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("重启Apache服务并将该服务设置为自动启动：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl restart httpd\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" httpd\n")])])]),a("p",[t._v("再次通过 "),a("code",[t._v('dotnet /<span style="color: #0000ff;">var')]),t._v("/aspnetcore/hellomvc/hellomvc.dll"),t._v(" 将项目运行起来后，访问 "),a("code",[t._v('http:<span style="color: #008000;">//')]),a("span",{staticStyle:{color:"#008000"}},[t._v("ip ")]),t._v(" 或者 "),a("code",[t._v('http:<span style="color: #008000;">//')]),a("span",{staticStyle:{color:"#008000"}},[t._v("ip:8080")]),t._v(" 均访问正常。")]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff6600"}},[t._v("到现在可能有人比较疑惑， 既然之前的项目已经可以正常访问了，为什么还要用Apache？在项目中直接指定监听80端口不就已经OK？   因为这样做该服务直接占用了80端口， 但有些情况下，我们需要将来自不同域名的访问指定到不同的端口处理，例如可以将a.com的请求指定到8080，将b.com的请求指定到8081.  当然， 如果没有这样的需求，直接用"),a("span",{attrs:{"data-ttu-id":"24e91-142"}},[t._v("Kestrel")]),t._v("做服务而不用反向代理。")])]),t._v(" "),a("p",[a("span",{staticStyle:{color:"#ff6600"}},[t._v(" 另外每次通过命令 "),a("code",[t._v("dotnet xxx.dll")]),t._v(" 的方式来启动也不是个很好的体验，我们可以创建个service来管理它， 这也有点向windows的service。")])]),t._v(" "),a("h2",{attrs:{id:"_6-创建service管理应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-创建service管理应用"}},[t._v("#")]),t._v(" 6. 创建service管理应用")]),t._v(" "),a("p",[t._v("再次用nano创建文件：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nano")]),t._v(" /etc/systemd/system/kestrel-hellomvc.service\n")])])]),a("p",[t._v("文件内容如下：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token attribute"}},[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Unit")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nDescription"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Example "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NET Web API App running "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" CentOS "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nWorkingDirectory"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("aspnetcore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("hellomvc")]),t._v("\nExecStart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("dotnet "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("aspnetcore"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("hellomvc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("hellomvc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dll")]),t._v("\nRestart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("always\n"),a("span",{pre:!0,attrs:{class:"token preprocessor property"}},[t._v("# Restart service after 10 seconds if dotnet service crashes")]),t._v("\nRestartSec"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\nSyslogIdentifier"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dotnet"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("example")]),t._v("\nUser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("apache")]),t._v("\nEnvironment"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ASPNETCORE_ENVIRONMENT"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Production \n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Install"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nWantedBy"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("multi"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target\n")])])]),a("p",[t._v("保存并启动服务：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" kestrel-hellomvc.service\nsystemctl start kestrel-hellomvc.service\n")])])]),a("p",[t._v("查看是否成功：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("systemctl status kestrel-hellomvc.service\n")])])]),a("p",[t._v("在此处我遇到了问题，提示出错，..........(code=exited, status=203/EXEC)..............  kestrel-hellomvc.service failed。坑三出现，又是各种搜索，后来发现msdn中提供的上面的kestrel-hellomvc.service文件内容中的 "),a("code",[t._v("ExecStart=/usr/local/bin/dotnet")]),t._v(" 在我的CentOS系统中不存在，通过 "),a("code",[t._v("which dotnet")]),t._v(" 查看我的系统中是在 "),a("code",[t._v("/usr/bin/dotnet")]),t._v(" ，修改kestrel-hellomvc.service重新执行 "),a("code",[t._v("systemctl start kestrel-hellomvc.service")]),t._v(" 提示成功。注意修改该文件后会提示先执行 "),a("code",[t._v("systemctl daemon-reload")]),t._v(" 重新加载。")]),t._v(" "),a("p",[t._v("至此，主要工作均已完成。")]),t._v(" "),a("h2",{attrs:{id:"_7-其他注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-其他注意事项"}},[t._v("#")]),t._v(" 7. 其他注意事项")]),t._v(" "),a("h3",{attrs:{id:"a-kestrel-hellomvc-service中的user-apache"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#a-kestrel-hellomvc-service中的user-apache"}},[t._v("#")]),t._v(" A.kestrel-hellomvc.service中的"),a("span",{attrs:{"data-mce-":""}},[t._v("User="),a("span",{attrs:{"data-mce-":""}},[t._v("apache")])])]),t._v(" "),a("p",[a("span",{attrs:{"data-mce-":""}},[a("span",{attrs:{"data-mce-":""}},[t._v(" 在安装Apache之前，通过 "),a("code",[t._v('dotnet /<span style="color: #0000ff;">var')]),t._v("/aspnetcore/hellomvc/hellomvc.dll")]),t._v(" 已经可以将项目运行起来了， 那时候就想先创建Service，因为觉得这与Apache无关， 结果service总是启动失败，后来才注意到了这个"),a("span",{attrs:{"data-mce-":""}},[t._v("User="),a("span",{attrs:{"data-mce-":""}},[t._v("apache")])]),t._v("，这里要求这个User存在并且拥有相应的权限。由于对CentOS不熟悉，这点也绕了好久。")])]),t._v(" "),a("h3",{attrs:{id:"b-启用forwardedheaders中间件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b-启用forwardedheaders中间件"}},[t._v("#")]),t._v(" "),a("span",{attrs:{"data-mce-":""}},[a("span",{attrs:{"data-mce-":""}})]),a("span",{attrs:{"data-mce-":""}},[a("span",{attrs:{"data-mce-":""}},[t._v("B.启用")])]),a("span",{attrs:{"data-mce-":""}},[a("span",{attrs:{"data-mce-":""}},[t._v("ForwardedHeaders中间件")])])]),t._v(" "),a("p",[a("span",{attrs:{"data-mce-":""}},[a("span",{attrs:{"data-mce-":""}},[t._v(" 由于采用了反向代理，需要启用ForwardedHeaders中间件转发，在Startup的Configure中添加如下代码，注意UseForwardedHeaders要用在UseAuthentication之前。（"),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer?view=aspnetcore-2.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("MSDN上的详细说明"),a("OutboundLink")],1),t._v("）")])])]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UseForwardedHeaders")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("ForwardedHeadersOptions")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ForwardedHeaders "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ForwardedHeaders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("XForwardedFor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ForwardedHeaders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("XForwardedProto\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("UseAuthentication")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_8-独立部署-scd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-独立部署-scd"}},[t._v("#")]),t._v(" 8. 独立部署（SCD）")]),t._v(" "),a("p",[t._v("下面说一下独立部署（包含依赖项）的发布方式。")]),t._v(" "),a("p",[t._v("在VS中右击项目文件，注意是 "),a("code",[t._v(".csproj")]),t._v(" 而不是 "),a("code",[t._v(".sln")]),t._v(" ，选择编辑xxx.csproj，打开该文件：")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Project")]),t._v(" Sdk"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Microsoft.NET.Sdk.Web"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PropertyGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TargetFramework"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("netcoreapp2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TargetFramework"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("PropertyGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ItemGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PackageReference")]),t._v(" Include"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Microsoft.AspNetCore.All"')]),t._v(" Version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0.6"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ItemGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ItemGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DotNetCliToolReference")]),t._v(" Include"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Microsoft.VisualStudio.Web.CodeGeneration.Tools"')]),t._v(" Version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0.3"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ItemGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Project"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("在PropertyGroup中添加RuntimeIdentifiers标签")]),t._v(" "),a("div",{staticClass:"language-csharp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-csharp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PropertyGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TargetFramework"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("netcoreapp2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("TargetFramework"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("RuntimeIdentifiers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("win10"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("centos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x64"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("RuntimeIdentifiers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("PropertyGroup"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("win10-x64;centos-x64叫做.NET Core RID， 是一些固定的内容， 具体可选项见"),a("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/dotnet/core/rid-catalog",target:"_blank",rel:"noopener noreferrer"}},[t._v(".NET Core RID的目录"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("当我们再次发布的时候，在发布设置的目标运行时中就出现了这两个选项，我们可以根据需要部署的系统选择对应的RID后进行发布。")]),t._v(" "),a("h2",{attrs:{id:"_9-2018-5-8文章更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2018-5-8文章更新"}},[t._v("#")]),t._v(" 9. 2018.5.8文章更新")]),t._v(" "),a("p",[t._v("Visual Studio 2017 15.7版本的项目发布提供了部署模式（框架依赖和独立部署）和目标运行时（win、osx、linux）的选择功能")]),t._v(" "),a("p",[a("img",{attrs:{src:"/blogimages/ASPNETCore2_9/548134-20180508095954157-106746629.png",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);